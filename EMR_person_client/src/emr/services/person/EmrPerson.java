
package emr.services.person;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "emrPerson", targetNamespace = "http://person.services.emr")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmrPerson {


    /**
     * 
     * @param personId
     * @return
     *     returns emr.services.person.PersonBean
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getPersonById", targetNamespace = "http://person.services.emr", className = "emr.services.person.GetPersonById")
    @ResponseWrapper(localName = "getPersonByIdResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.GetPersonByIdResponse")
    @Action(input = "http://person.services.emr/emrPerson/getPersonByIdRequest", output = "http://person.services.emr/emrPerson/getPersonByIdResponse")
    public PersonBean getPersonById(
        @WebParam(name = "person_id", targetNamespace = "")
        int personId);

    /**
     * 
     * @param target
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "checkSession", targetNamespace = "http://person.services.emr", className = "emr.services.person.CheckSession")
    @ResponseWrapper(localName = "checkSessionResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.CheckSessionResponse")
    @Action(input = "http://person.services.emr/emrPerson/checkSessionRequest", output = "http://person.services.emr/emrPerson/checkSessionResponse")
    public int checkSession(
        @WebParam(name = "target", targetNamespace = "")
        Session target);

    /**
     * 
     * @param person
     * @param session
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://person.services.emr", className = "emr.services.person.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.UpdatePersonResponse")
    @Action(input = "http://person.services.emr/emrPerson/updatePersonRequest", output = "http://person.services.emr/emrPerson/updatePersonResponse")
    public int updatePerson(
        @WebParam(name = "person", targetNamespace = "")
        PersonBean person,
        @WebParam(name = "session", targetNamespace = "")
        Session session);

    /**
     * 
     * @param target
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "deleteSession", targetNamespace = "http://person.services.emr", className = "emr.services.person.DeleteSession")
    @ResponseWrapper(localName = "deleteSessionResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.DeleteSessionResponse")
    @Action(input = "http://person.services.emr/emrPerson/deleteSessionRequest", output = "http://person.services.emr/emrPerson/deleteSessionResponse")
    public int deleteSession(
        @WebParam(name = "target", targetNamespace = "")
        Session target);

    /**
     * 
     * @param userId
     * @param password
     * @return
     *     returns emr.services.person.Session
     */
    @WebMethod
    @WebResult(name = "created_session", targetNamespace = "")
    @RequestWrapper(localName = "createSession", targetNamespace = "http://person.services.emr", className = "emr.services.person.CreateSession")
    @ResponseWrapper(localName = "createSessionResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.CreateSessionResponse")
    @Action(input = "http://person.services.emr/emrPerson/createSessionRequest", output = "http://person.services.emr/emrPerson/createSessionResponse")
    public Session createSession(
        @WebParam(name = "user_id", targetNamespace = "")
        int userId,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param newPerson
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "insertNewPerson", targetNamespace = "http://person.services.emr", className = "emr.services.person.InsertNewPerson")
    @ResponseWrapper(localName = "insertNewPersonResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.InsertNewPersonResponse")
    @Action(input = "http://person.services.emr/emrPerson/insertNewPersonRequest", output = "http://person.services.emr/emrPerson/insertNewPersonResponse")
    public int insertNewPerson(
        @WebParam(name = "new_person", targetNamespace = "")
        PersonBean newPerson);

    /**
     * 
     * @param sessionId
     * @return
     *     returns emr.services.person.Session
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getSessionById", targetNamespace = "http://person.services.emr", className = "emr.services.person.GetSessionById")
    @ResponseWrapper(localName = "getSessionByIdResponse", targetNamespace = "http://person.services.emr", className = "emr.services.person.GetSessionByIdResponse")
    @Action(input = "http://person.services.emr/emrPerson/getSessionByIdRequest", output = "http://person.services.emr/emrPerson/getSessionByIdResponse")
    public Session getSessionById(
        @WebParam(name = "session_id", targetNamespace = "")
        int sessionId);

}
